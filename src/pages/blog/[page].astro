---
// layout
import BaseLayout from '@/layouts/BaseLayout.astro'

// types
import type { GetStaticPaths } from 'astro'

// components
import AuthorCard from '@/components/blog/AuthorCard.astro'
import FormattedDate from '@/components/ui/FormattedDate.astro'
import Heading from '@/components/ui/Heading.astro'

// helpers
import { getEntry } from 'astro:content'
import { getCollection } from 'astro:content'
import { render } from 'astro:content'
import { undefined } from 'astro:schema'

export const getStaticPaths = (async () => {
  const posts = await getCollection('blog', ({ data }) => !data.isDraft)
  return posts.map((post) => ({
    params: {
      page: post.data.slug,
    },
    props: {
      post,
    },
  }))
}) satisfies GetStaticPaths

const { post } = Astro.props

const { Content } = await render(post)

const { title, description, pubDate, image } = post.data

const author: Record<string, any> | undefined = post.data.author
  ? await getEntry(post.data.author?.collection as keyof import('astro:content').DataEntryMap, post.data.author?.id)
  : undefined
---

<BaseLayout title={title} description={description}>
  <section aria-label="Blog metadata" class="blog-metadata">
    <header>
      <FormattedDate date={pubDate} />
      <Heading tagName="h1" tagSize="h2">{title}</Heading>
      {author && <small>by {author.data?.name}</small>}
      <p>{description}</p>
    </header>
    <img src={image.src} alt="" />
  </section>
  <section aria-label="Blog content" class="blog-content">
    <Content />
  </section>
  <AuthorCard />
</BaseLayout>
